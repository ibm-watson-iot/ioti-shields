namespace com.ibm.iot4i.hazards.IoTP ;

use com.ibm.iot4i.models::Hazard ;
use com.ibm.iot4i.hazards.common::* ;

public composite SubmitHazards(input stream<Hazard> HazardStream )
{
	param
		expression<rstring> $ORG ;
		expression<rstring> $AUTH_KEY ;
		expression<rstring> $AUTH_TOKEN ;
		expression<int32> $QOS ;
		expression<rstring> $SINK_APP_ID :(rstring) jobID() + "_cmd" ;
		expression<rstring> $SINK_TOPIC :
			"iot-2/type/hazard/id/shield/cmd/hazardDetected/fmt/json" ;
		expression<rstring> $SHIELD_ID ;
		expression<rstring> $API_URL ;
		expression<rstring> $API_TOKEN ;
		expression<rstring> $TENANT_ID ;
	graph
		(stream<rstring data> PreparedHazardStream) as prepare =
			PrepareHazards(HazardStream)
		{
			param
				SHIELD_ID : $SHIELD_ID ;
		}

		() as iotpSink = Sink(PreparedHazardStream)
		{
			param
				SINK_CLIENT_ID : "a:" + $ORG + ":" + $SINK_APP_ID +(rstring) getChannel() ;
				ORG : $ORG ;
				AUTH_KEY : $AUTH_KEY ;
				AUTH_TOKEN : $AUTH_TOKEN ;
				QOS : $QOS ;
				SINK_TOPIC : $SINK_TOPIC ;
		}
} 