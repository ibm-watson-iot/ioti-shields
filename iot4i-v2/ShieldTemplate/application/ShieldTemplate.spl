namespace application ;

use com.ibm.streamsx.messaging.mqtt::* ;
use application::Transformer ;
use application::SimpleShield ;
use com.ibm.streamsx.iot::* ;
use com.ibm.streamsx.iot.watson::* ;

composite ShieldTemplate
{
	graph
		@parallel(width = 3)
		() as App = Main()
		{
		}

}

rstring getIotPUrl(rstring org, rstring domain, boolean encrypted)
{
	rstring host = org + ".messaging." + domain ;
	if(encrypted) return "ssl://" + host + ":8883" ;
	else return "tcp://" + host + ":1883" ;
}

composite Main
{
	param
	    // IoTP config params
		expression<rstring> $ORG : getSubmissionTimeValue("ORG") ;
		expression<rstring> $AUTH_KEY : getSubmissionTimeValue("AUTH_KEY") ;
		expression<rstring> $AUTH_TOKEN : getSubmissionTimeValue("AUTH_TOKEN") ;
		expression<int32> $QOS :(int32) getSubmissionTimeValue("QOS") ;
		expression<rstring> $SOURCE_APP_ID :(rstring) jobID() + "_evt" ;
		expression<rstring> $NOTIFICATION_APP_ID :(rstring) jobID() +
			"_notification" ;
		expression<rstring> $SINK_APP_ID :(rstring) jobID() + "_cmd" ;
		expression<rstring> $SOURCE_TOPIC : "iot-2/type/+/id/+/evt/+/fmt/+" ;
		expression<rstring> $SINK_TOPIC :
			"iot-2/type/hazard/id/shield/cmd/status/fmt/json" ;
		expression<rstring> $NOTIFICATION_TOPIC :
			"iot-2/type/+/id/+/cmd/notification/fmt/json" ;
		expression<rstring> $TOPIC_ATTR_NAME : "topic" ;
		expression<rstring> $DATA_ATTR_NAME : "payload" ;
		expression<rstring> $TRUST_STORE_PASSWORD : "streamsx.iotf.123" ;
		expression<rstring> $TRUST_STORE : getThisToolkitDir() +
			"/opt/messaging.ts" ;
		expression<rstring> $IoTPUrl : getIotPUrl(getSubmissionTimeValue("ORG"),
			"internetofthings.ibmcloud.com", true) ;
		// Database config params
		expression<rstring> $DB_NAME : getSubmissionTimeValue("DB_NAME") ;
		expression<rstring> $DB_HOST : getSubmissionTimeValue("DB_HOST") ;
		expression<rstring> $DB_USER : getSubmissionTimeValue("DB_USER") ;
		expression<rstring> $DB_PASSWORD : getSubmissionTimeValue("DB_PASSWORD") ;
		// others
		expression<rstring> $SHIELD_ID : getSubmissionTimeValue("SHIELD_ID") ;
	graph
		stream<rstring payload, rstring topic> NotificationStream = MQTTSource()
		{		
			logic
				state :
				{
					rstring _clientId = "a:" + $ORG + ":" + $NOTIFICATION_APP_ID + (rstring) getChannel();
				}

			param
				clientID : _clientId ;
				serverURI : $IoTPUrl ;
				userID : $AUTH_KEY ;
				password : $AUTH_TOKEN ;
				topicOutAttrName : $TOPIC_ATTR_NAME ;
				dataAttributeName : $DATA_ATTR_NAME ;
				topics : $NOTIFICATION_TOPIC ;
				qos : $QOS ;
				trustStore : $TRUST_STORE ;
				trustStorePassword : $TRUST_STORE_PASSWORD ;
		}
		
		stream<rstring payload, rstring topic> SourceStream = MQTTSource()
		{
			logic
				state :
				{
					rstring _clientId =(getMaxChannels() >= 2 ? "A:" : "a:") + $ORG + ":" +
						$SOURCE_APP_ID;
				}

			param
				clientID : _clientId ;
				serverURI : $IoTPUrl ;
				userID : $AUTH_KEY ;
				password : $AUTH_TOKEN ;
				topicOutAttrName : $TOPIC_ATTR_NAME ;
				dataAttributeName : $DATA_ATTR_NAME ;
				topics : $SOURCE_TOPIC ;
				qos : $QOS ;
				trustStore : $TRUST_STORE ;
				trustStorePassword : $TRUST_STORE_PASSWORD ;
		}
		
		@catch(exception = all, tupleTrace = true, stackTrace = false)
		stream<rstring data> TransformedStream = Transformer(SourceStream,
			NotificationStream  )
		{
			param
				dbName : $DB_NAME ;
				dbHost : $DB_HOST ;
				dbUser : $DB_USER ;
				dbPassword : $DB_PASSWORD ;
				shieldId : $SHIELD_ID ;
				deviceIdAttributeName : "gatewayId" ;
				checkShieldActivationRule : true ;
		}

		@catch(exception = all, tupleTrace = true, stackTrace = false)
		stream<rstring data> HazardStream = SimpleShield(TransformedStream)
		{
			param
				shieldId : $SHIELD_ID ;
				operationType : equals ;
				attributeName : "isCrash" ;
				attributeValue : "true" ;
				hazardTitle : "Crash detected." ;
		}

		@catch(exception = all, tupleTrace = true, stackTrace = false)
		() as Sink = MQTTSink(HazardStream as hazards)
		{
			logic
				state :
				{
					rstring _clientId = "a:" + $ORG + ":" + $SINK_APP_ID + (rstring) getChannel();
				}

			param
				clientID : _clientId ;
				serverURI : $IoTPUrl ;
				userID : $AUTH_KEY ;
				password : $AUTH_TOKEN ;
				topic : $SINK_TOPIC ;
				qos : $QOS ;
				trustStore : $TRUST_STORE ;
				trustStorePassword : $TRUST_STORE_PASSWORD ;
		}

}
